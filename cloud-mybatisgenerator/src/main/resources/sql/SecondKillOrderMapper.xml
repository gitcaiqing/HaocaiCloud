<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haocai.mybatisGenerator.mapper.SecondKillOrderMapper">
  <resultMap id="BaseResultMap" type="com.haocai.mybatisGenerator.entity.SecondKillOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="place_name" jdbcType="VARCHAR" property="placeName" />
    <result column="place_phone" jdbcType="BIGINT" property="placePhone" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, place_name, place_phone, goods_id, created_time, updated_time, version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_secondkill_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_secondkill_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.haocai.mybatisGenerator.entity.SecondKillOrder">
    insert into tb_secondkill_order (id, place_name, place_phone, 
      goods_id, created_time, updated_time, 
      version)
    values (#{id,jdbcType=BIGINT}, #{placeName,jdbcType=VARCHAR}, #{placePhone,jdbcType=BIGINT}, 
      #{goodsId,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.haocai.mybatisGenerator.entity.SecondKillOrder">
    insert into tb_secondkill_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="placeName != null">
        place_name,
      </if>
      <if test="placePhone != null">
        place_phone,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="placeName != null">
        #{placeName,jdbcType=VARCHAR},
      </if>
      <if test="placePhone != null">
        #{placePhone,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.haocai.mybatisGenerator.entity.SecondKillOrder">
    update tb_secondkill_order
    <set>
      <if test="placeName != null">
        place_name = #{placeName,jdbcType=VARCHAR},
      </if>
      <if test="placePhone != null">
        place_phone = #{placePhone,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haocai.mybatisGenerator.entity.SecondKillOrder">
    update tb_secondkill_order
    set place_name = #{placeName,jdbcType=VARCHAR},
      place_phone = #{placePhone,jdbcType=BIGINT},
      goods_id = #{goodsId,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>